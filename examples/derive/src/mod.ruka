local std = @package("std")

const Genome = interface {
    Population: any type
    fitness:   (Population) -> float
    selection: (Population) -> Population
    crossover: (Population) -> Population
    mutation:  (Population) -> Population
    termination: (Population) -> bool
}

const GeneticAlgorithm = (genome: any Genome) do
    genome <> record { // Can concatenate records
        const t = record {
            pop: Population
        }

        const init = () do
            t { pop = {} }
        end

        const run (self: t) = () do
            while not termination(self.pop) do
                // Perform selection, crossover, and mutation
            end
        end
    }
end

test "" do
    const example = record {
        const Population = [10; float]
        const fitness = (p: Population) {
            var sum = 0.0
            for i in p do
                sum += i
            end

            sum
        }
        // ...
    }

    const algo = GeneticAlgorithm(example).init()
    algo.run()
end
